{"remainingRequest":"/Users/tim/Desktop/电商程序/package 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tim/Desktop/电商程序/package 2/src/views/userMember/adminManagement/index.vue?vue&type=style&index=0&id=46dbabc5&scoped=true&lang=scss","dependencies":[{"path":"/Users/tim/Desktop/电商程序/package 2/src/views/userMember/adminManagement/index.vue","mtime":1714152570707},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZGlhbG9nLXJvbGUgew0KICB3aWR0aDogMTAwJTsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIC5zZWxlY3Qtcm9sZSB7DQogICAgbWFyZ2luLWxlZnQ6IDEwJTsNCiAgICB3aWR0aDogODAlOw0KICB9DQogIC5yb2xlLWZvb3RlciB7DQogICAgbWFyZ2luLXRvcDogOCU7DQogICAgZGlzcGxheTogZmxleDsNCiAgICB3aWR0aDogODAlOw0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIG1hcmdpbi1sZWZ0OiAxMCU7DQogIH0NCn0NCg0KLmJ0bi1ib3ggew0KICBtYXJnaW46IDBweCAzMHB4Ow0KfQ0KLnNlYXJjaCB7DQogIHBhZGRpbmc6IDMwcHggMjBweCAxMHB4IDIwcHg7DQp9DQoub3JkZXItbWFpbiB7DQogIC5zZWFyY2hGb3JtIHsNCiAgICA6OnYtZGVlcCAuZWwtZm9ybS1pdGVtIHsNCiAgICAgIGxhYmVsIHsNCiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsNCiAgICAgIH0NCiAgICB9DQogIH0NCiAgLmNhcmQgew0KICAgIG1hcmdpbjogMTBweCAzMHB4Ow0KICB9DQogIC5zZWFyY2gtbWFpbiB7DQogICAgLnNlYXJjaC1pbnB1dCB7DQogICAgICB3aWR0aDogMjAwcHg7DQogICAgfQ0KICB9DQogIC50YWJsZV9pbWcgew0KICAgIHdpZHRoOiAxMDBweDsNCiAgICBoZWlnaHQ6IDEwMHB4Ow0KICB9DQogIC5zZWFyY2hCdG5fd3JhcHBlciB7DQogICAgbWFyZ2luLXRvcDogMjBweDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTsNCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAueA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/userMember/adminManagement","sourcesContent":["<template>\r\n  <div class=\"order-main\">\r\n    <el-form label-width=\"80px\" :inline=\"false\" class=\"search\" size=\"normal\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col class=\"searchItem\" :span=\"6\" :offset=\"0\">\r\n          <el-form-item label=\"用户名\" size=\"mini\">\r\n            <el-input\r\n              v-model=\"search.keyword\"\r\n              class=\"search-input\"\r\n              size=\"mini\"\r\n              placeholder=\"请输入关键字\"\r\n            />\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col class=\"searchItem\" :span=\"6\" :offset=\"0\"> </el-col>\r\n        <el-col style=\"float: right\" :span=\"4\" :offset=\"0\">\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"doSearch()\"\r\n            >搜索</el-button\r\n          >\r\n          <el-button type=\"default\" size=\"mini\" @click=\"doReset()\"\r\n            >重置\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div class=\"btn-box\">\r\n      <el-button type=\"primary\" size=\"mini\" @click=\"addRoleHandler()\"\r\n        >新增</el-button\r\n      >\r\n      <!-- 嵌套表单 -->\r\n      <el-dialog\r\n        :title=\"isEdit ? '编辑用户' : '新增用户'\"\r\n        :visible.sync=\"dialogFormVisible\"\r\n      >\r\n        <el-form :model=\"form\" :rules=\"rules\">\r\n          <el-form-item label=\"用户名\" prop=\"name\">\r\n            <el-input v-model.trim=\"form.name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input v-model.trim=\"form.password\"></el-input>\r\n          </el-form-item>\r\n          <!-- <el-form-item label=\"分配角色\">\r\n            <el-input v-model.trim=\"form.role_id\"></el-input>\r\n          </el-form-item> -->\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addRoleFormCancel()\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addRoleFormOk()\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n      <!-- 分配角色 -->\r\n      <el-dialog\r\n        title=\"分配角色\"\r\n        :visible.sync=\"dialogRoleForm\"\r\n        class=\"dialog-role\"\r\n        center\r\n      >\r\n        <el-select\r\n          class=\"select-role\"\r\n          v-model=\"assign.value\"\r\n          remote\r\n          multiple\r\n          filterable\r\n          :remote-method=\"searchRole\"\r\n          :loading=\"assign.loading\"\r\n          placeholder=\"请选择角色标签\"\r\n          default-first-option\r\n        >\r\n          <el-option\r\n            v-for=\"item in assign.options\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          >\r\n          </el-option>\r\n        </el-select>\r\n        <div class=\"role-footer\">\r\n          <el-button @click=\"addRoleCancel()\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addRoleConfirm()\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n    <!-- 订单列表 -->\r\n    <el-card class=\"card\" shadow=\"never\">\r\n      <el-table :data=\"roleList\" border style=\"width: 100%\">\r\n        <el-table-column align=\"center\" type=\"index\" label=\"#\" fixed=\"left\" />\r\n        <el-table-column align=\"center\" label=\"id\" prop=\"id\" width=\"100\" />\r\n        <el-table-column align=\"center\" label=\"用户名\" prop=\"name\" />\r\n        <el-table-column align=\"center\" label=\"角色\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag\r\n              v-for=\"item in scope.row.role_names\"\r\n              :key=\"item\"\r\n              type=\"warning\"\r\n              effect=\"dark\"\r\n            >\r\n              {{ item }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          align=\"center\"\r\n          label=\"创建时间\"\r\n          prop=\"created_at\"\r\n          width=\"200\"\r\n        />\r\n        <el-table-column\r\n          align=\"center\"\r\n          label=\"更新时间\"\r\n          prop=\"updated_at\"\r\n          width=\"200\"\r\n        />\r\n        <el-table-column align=\"center\" label=\"操作\" width=\"200\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 编辑按钮 -->\r\n            <el-button\r\n              type=\"primary\"\r\n              size=\"mini\"\r\n              icon=\"el-icon-edit\"\r\n              @click=\"editUserHandler(scope.row)\"\r\n              circle\r\n            />\r\n            <!--分配角色按钮 -->\r\n            <el-button\r\n              type=\"warning\"\r\n              size=\"mini\"\r\n              icon=\"el-icon-key\"\r\n              @click=\"assignRoles(scope.row.id, scope.row.role_names)\"\r\n              circle\r\n            />\r\n            <!-- 删除按钮 -->\r\n            <el-button\r\n              type=\"danger\"\r\n              size=\"mini\"\r\n              icon=\"el-icon-delete\"\r\n              @click=\"deleteUserHandler(scope.row.id)\"\r\n              circle\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 所有列表都要有分页 除非有特殊要求 否则数据多的情况下就没办法看了 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"currentPage\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"limit\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAdminList,\r\n  addAdmin,\r\n  deleteAdmin,\r\n  editAdmin,\r\n  getRoleList,\r\n} from \"@/api/api.js\";\r\nexport default {\r\n  name: \"roleList\",\r\n  data() {\r\n    return {\r\n      roleList: [], // 列表\r\n      currentPage: 1, //当前页\r\n      limit: 10, //每页条数\r\n      page: 1, //页数\r\n      total: null, //总条数\r\n      dialogFormVisible: false, // 控制新增弹出框\r\n      dialogRoleForm: false, // 控制分配权限框\r\n      isEdit: false, // 是否是编辑\r\n      editId: \"\", // 当前编辑id\r\n      /**\r\n       * 搜索\r\n       */\r\n      search: {\r\n        keyword: \"\",\r\n        timer: null, // 节流\r\n      },\r\n      /**\r\n       * 表单验证\r\n       */\r\n      rules: {\r\n        name: [{ required: true, message: \"请输入用户名\", trigger: \"blur\" }],\r\n        password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\r\n      },\r\n      /**\r\n       * 新增form\r\n       */\r\n      form: {\r\n        name: \"\",\r\n        password: \"\",\r\n        is_admin: \"1\",\r\n        // role_id: 37,\r\n      },\r\n      /**\r\n       * 分配角色数据\r\n       */\r\n      assign: {\r\n        options: [],\r\n        value: [],\r\n        loading: false,\r\n        timer: null, // 节流\r\n        id: null,\r\n      },\r\n    };\r\n  },\r\n  computed: {},\r\n  created() {\r\n    this.getList();\r\n  },\r\n  watch: {\r\n    dialogFormVisible(newVal) {\r\n      if (!newVal) {\r\n        // 清空表单数据，恢复初始数据\r\n        Object.assign(this.$data.form, this.$options.data().form);\r\n      }\r\n    },\r\n    dialogRoleForm(newVal) {\r\n      if (!newVal) {\r\n        // 清空表单数据，恢复初始数据\r\n        this.assign.value = [];\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.roleList = [];\r\n      const params = {\r\n        /**\r\n         * 空值显示所有\r\n         */\r\n        keyword: this.search.keyword,\r\n        limit: this.limit,\r\n        page: this.currentPage,\r\n      };\r\n      const res = await getAdminList(params);\r\n      // console.log(res);\r\n      console.table(res.data.list);\r\n      if (res.code === 1) {\r\n        // 查找role id name ，\r\n        const roleList = await getRoleList({ page: 1, limit: 50 });\r\n        const roleNameList = roleList.data.list.map((item) => ({\r\n          name: item.name,\r\n          id: item.id,\r\n        }));\r\n        // console.log(roleList.data.list.find((i) => i.id === 39).name);\r\n        // console.log(roleNameList);\r\n        const userInfoList = res.data.list;\r\n        userInfoList.forEach((item) => {\r\n          console.log(\"--------\", item);\r\n          item.role_names =\r\n            item.is_admin === \"1\"\r\n              ? [\"超级管理员\"]\r\n              : item.role_id_array\r\n                  .map(\r\n                    (id) => roleList.data.list.find((it) => it.id == id)?.name\r\n                  )\r\n                  .filter((item) => item);\r\n          console.log(item.role_names);\r\n        });\r\n        console.table(userInfoList);\r\n        if (res.data.list.length > 0) {\r\n          this.roleList = res.data.list;\r\n          this.total = res.data.count;\r\n        }\r\n      }\r\n    },\r\n    // 分页\r\n    handleSizeChange(val) {\r\n      console.log(`每页 ${val} 条`);\r\n      this.limit = val;\r\n      this.getList();\r\n    },\r\n    handleCurrentChange(val) {\r\n      console.log(`当前页: ${val}`);\r\n      this.currentPage = val;\r\n      this.getList();\r\n    },\r\n    // 重置搜索栏\r\n    doReset() {\r\n      this.search.keyword = \"\";\r\n      this.currentPage = 1;\r\n      this.limit = 10;\r\n      this.getList();\r\n    },\r\n    // 搜索按钮\r\n    doSearch() {\r\n      if (this.search.keyword.length > 0) {\r\n        // 2s节流\r\n        if (!this.search.timer) {\r\n          this.search.timer = setTimeout(() => {\r\n            clearTimeout(this.search.timer);\r\n            this.search.timer = null;\r\n          }, 2000);\r\n          this.getList();\r\n        }\r\n      } else {\r\n        this.$message({\r\n          message: \"请输入搜索关键字\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * 新增按钮事件，新增事件\r\n     */\r\n    async addRoleHandler() {\r\n      this.dialogFormVisible = true;\r\n    },\r\n    /**\r\n     * 新增表单 - 取消事件\r\n     */\r\n    addRoleFormCancel() {\r\n      // 关闭表单\r\n      this.dialogFormVisible = false;\r\n    },\r\n    /**\r\n     * 新增表单 - 确定事件\r\n     */\r\n    async addRoleFormOk() {\r\n      const { name, desc } = this.form;\r\n      if (name.length < 1 && desc.length < 1) {\r\n        this.$message({\r\n          message: \"内容不能为空\",\r\n          type: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      // 是编辑进来的\r\n      if (this.isEdit) {\r\n        // 查看改的名字是否有重复\r\n        if (\r\n          this.roleList\r\n            .filter((item) => item.id !== this.editId)\r\n            .some((item) => item.name === name)\r\n        ) {\r\n          this.$message({\r\n            message: \"已有相同用户名\",\r\n            type: \"warning\",\r\n          });\r\n          return;\r\n        }\r\n        const res = await editAdmin({ ...this.form, id: this.editId });\r\n        if (res.code === 1) {\r\n          this.$message({\r\n            message: \"修改成功\",\r\n            type: \"success\",\r\n          });\r\n        }\r\n      } else {\r\n        // 验证是否有相同名称\r\n        if (this.roleList.some((item) => item.name === name)) {\r\n          this.$message({\r\n            message: \"已有相同用户名\",\r\n            type: \"warning\",\r\n          });\r\n          return;\r\n        }\r\n        const res = await addAdmin(this.form);\r\n        if (res.code === 1) {\r\n          this.$message({\r\n            message: \"添加成功\",\r\n            type: \"success\",\r\n          });\r\n        }\r\n      }\r\n      // 关闭表单\r\n      this.dialogFormVisible = false;\r\n      // 更新页面\r\n      this.getList();\r\n    },\r\n    /**\r\n     * 编辑事件\r\n     */\r\n    editUserHandler(role) {\r\n      console.log(role);\r\n      this.isEdit = true;\r\n      this.editId = role.id;\r\n      this.form.name = role.name;\r\n      this.dialogFormVisible = true;\r\n    },\r\n    /**\r\n     * 分配权限按钮\r\n     */\r\n    async assignRoles(id, roleNames) {\r\n      this.assign.id = id;\r\n\r\n      this.dialogRoleForm = true;\r\n      const res = await getRoleList({ limit: 10, page: 1 });\r\n      console.log(res);\r\n      if (res.code === 1) {\r\n        this.assign.options = res.data.list.map((item) => ({\r\n          value: item.id,\r\n          label: item.name,\r\n        }));\r\n      }\r\n    },\r\n    /**\r\n     * 搜索\r\n     */\r\n    searchRole(keyword) {\r\n      console.log(keyword);\r\n      clearTimeout(this.assign.timer);\r\n      // 输入停止触发 500ms\r\n      this.assign.timer = setTimeout(async () => {\r\n        clearTimeout(this.assign.timer);\r\n        if (keyword.trim().length > 0) {\r\n          this.assign.loading = true;\r\n          const res = await getRoleList({ limit: 10, page: 1, keyword });\r\n          console.log(res);\r\n          if (res.code === 1) {\r\n            this.assign.options = res.data.list?.map((item) => ({\r\n              value: item.id,\r\n              label: item.name,\r\n            }));\r\n          }\r\n          this.assign.loading = false;\r\n        } else {\r\n          this.assign.options = [];\r\n        }\r\n      }, 500);\r\n    },\r\n    /**\r\n     * 删除事件\r\n     */\r\n    deleteUserHandler(id) {\r\n      console.log(id);\r\n      this.$confirm(\"此操作将永久删除该管理员, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(async () => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"删除成功!\",\r\n          });\r\n          const res = await deleteAdmin(id);\r\n          console.log(res);\r\n          if (res.code === 1) {\r\n            console.log(res);\r\n            // 更新页面\r\n            this.getList();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n    /**\r\n     * 分配角色取消事件\r\n     */\r\n    addRoleCancel() {\r\n      this.dialogRoleForm = false;\r\n    },\r\n    /**\r\n     * 分配角色确定事件\r\n     */\r\n    async addRoleConfirm() {\r\n      this.dialogRoleForm = false;\r\n      const role_ids = this.assign.value.join(\",\");\r\n      console.log(role_ids);\r\n      const res = await editAdmin({ id: this.assign.id, role_ids });\r\n      console.log(res);\r\n      if (res.code === 1) {\r\n        this.$message({\r\n          message: \"分配成功\",\r\n          type: \"success\",\r\n        });\r\n        // 更新页面\r\n        this.getList();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.dialog-role {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .select-role {\r\n    margin-left: 10%;\r\n    width: 80%;\r\n  }\r\n  .role-footer {\r\n    margin-top: 8%;\r\n    display: flex;\r\n    width: 80%;\r\n    justify-content: center;\r\n    margin-left: 10%;\r\n  }\r\n}\r\n\r\n.btn-box {\r\n  margin: 0px 30px;\r\n}\r\n.search {\r\n  padding: 30px 20px 10px 20px;\r\n}\r\n.order-main {\r\n  .searchForm {\r\n    ::v-deep .el-form-item {\r\n      label {\r\n        font-weight: normal;\r\n      }\r\n    }\r\n  }\r\n  .card {\r\n    margin: 10px 30px;\r\n  }\r\n  .search-main {\r\n    .search-input {\r\n      width: 200px;\r\n    }\r\n  }\r\n  .table_img {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  .searchBtn_wrapper {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n  }\r\n}\r\n</style>\r\n"]}]}