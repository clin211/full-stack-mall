{"remainingRequest":"/Users/tim/Desktop/电商程序/package 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tim/Desktop/电商程序/package 2/src/views/userMember/roleManagement/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/tim/Desktop/电商程序/package 2/src/views/userMember/roleManagement/index.vue","mtime":499162500000},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tim/Desktop/电商程序/package 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgew0KICBnZXRSb2xlTGlzdCwNCiAgYWRkUm9sZSwNCiAgZGVsZXRlUm9sZSwNCiAgZWRpdFJvbGUsDQogIGVkaXRSb2xlUGVybWlzc2lvbiwNCiAgZ2V0UGVybWlzc2lvbkxpc3QsDQogIGRlbGV0ZVJvbGVQZXJtaXNzaW9uLA0KfSBmcm9tICJAL2FwaS9hcGkuanMiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJyb2xlTGlzdCIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHJvbGVMaXN0OiBbXSwgLy8g6KeS6Imy5YiX6KGoDQogICAgICBjdXJyZW50UGFnZTogMSwgLy/lvZPliY3pobUNCiAgICAgIGxpbWl0OiAxMCwgLy/mr4/pobXmnaHmlbANCiAgICAgIHBhZ2U6IDEsIC8v6aG15pWwDQogICAgICB0b3RhbDogbnVsbCwgLy/mgLvmnaHmlbANCiAgICAgIGRpYWxvZ0Zvcm1WaXNpYmxlOiBmYWxzZSwgLy8g5o6n5Yi25paw5aKe6KeS6Imy5by55Ye65qGGDQogICAgICBpc0VkaXQ6IGZhbHNlLCAvLyDmmK/lkKbmmK/nvJbovpENCiAgICAgIGVkaXRJZDogIiIsIC8vIOW9k+WJjee8lui+keinkuiJsmlkDQogICAgICBkaWFsb2dSb2xlUGVybWlzc2lvbjogZmFsc2UsIC8vIOWIhumFjeadg+mZkOeVjOmdog0KICAgICAgc2VhcmNoOiB7DQogICAgICAgIGtleXdvcmQ6ICIiLA0KICAgICAgICB0aW1lcjogbnVsbCwgLy8g6IqC5rWBDQogICAgICB9LA0KICAgICAgLyoqDQogICAgICAgKiDooajljZXpqozor4ENCiAgICAgICAqLw0KICAgICAgcnVsZXM6IHsNCiAgICAgICAgbmFtZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXop5LoibLlkI3np7AiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sDQogICAgICAgIGRlc2M6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl6KeS6Imy5o+P6L+wIiwgdHJpZ2dlcjogImJsdXIiIH1dLA0KICAgICAgfSwNCiAgICAgIC8qKg0KICAgICAgICog5paw5aKe6KeS6ImyZm9ybQ0KICAgICAgICovDQogICAgICBmb3JtOiB7DQogICAgICAgIG5hbWU6ICIiLA0KICAgICAgICBkZXNjOiAiIiwNCiAgICAgIH0sDQogICAgICBhc3NpZ246IHsNCiAgICAgICAgdmFsdWU6IFtdLA0KICAgICAgICBsb2FkaW5nOiBmYWxzZSwNCiAgICAgICAgb3B0aW9uczogW10sDQogICAgICAgIGlkOiBudWxsLA0KICAgICAgICB0aW1lcjogbnVsbCwNCiAgICAgIH0sDQogICAgICByZXNLZXlzOiBbXSwNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDoge30sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5nZXRMaXN0KCk7DQogIH0sDQogIHdhdGNoOiB7DQogICAgZGlhbG9nRm9ybVZpc2libGUobmV3VmFsKSB7DQogICAgICBpZiAoIW5ld1ZhbCkgew0KICAgICAgICAvLyDmuIXnqbrooajljZXmlbDmja7vvIzmgaLlpI3liJ3lp4vmlbDmja4NCiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLiRkYXRhLmZvcm0sIHRoaXMuJG9wdGlvbnMuZGF0YSgpLmZvcm0pOw0KICAgICAgfQ0KICAgIH0sDQogICAgZGlhbG9nUm9sZVBlcm1pc3Npb24obmV3VmFsKSB7DQogICAgICBpZiAoIW5ld1ZhbCkgew0KICAgICAgICAvLyDmuIXnqbrooajljZXmlbDmja7vvIzmgaLlpI3liJ3lp4vmlbDmja4NCiAgICAgICAgdGhpcy5hc3NpZ24udmFsdWUgPSBbXTsNCiAgICAgIH0NCiAgICB9LA0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZ2V0TGlzdCgpIHsNCiAgICAgIHRoaXMucm9sZUxpc3QgPSBbXTsNCiAgICAgIGxldCBwYXJhbXMgPSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiDnqbrlgLzmmL7npLrmiYDmnIkNCiAgICAgICAgICovDQogICAgICAgIGtleXdvcmQ6IHRoaXMuc2VhcmNoLmtleXdvcmQsDQogICAgICAgIGxpbWl0OiB0aGlzLmxpbWl0LA0KICAgICAgICBwYWdlOiB0aGlzLmN1cnJlbnRQYWdlLA0KICAgICAgfTsNCiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFJvbGVMaXN0KHBhcmFtcyk7DQogICAgICBjb25zb2xlLmxvZyhyZXMpOw0KICAgICAgY29uc29sZS50YWJsZShyZXMuZGF0YS5saXN0KTsNCiAgICAgIGlmIChyZXMuY29kZSA9PT0gMSkgew0KICAgICAgICBpZiAocmVzLmRhdGEubGlzdC5sZW5ndGggPiAwKSB7DQogICAgICAgICAgdGhpcy5yb2xlTGlzdCA9IHJlcy5kYXRhLmxpc3Q7DQogICAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLmNvdW50Ow0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICAvL+WIhumhtQ0KICAgIGhhbmRsZVNpemVDaGFuZ2UodmFsKSB7DQogICAgICBjb25zb2xlLmxvZyhg5q+P6aG1ICR7dmFsfSDmnaFgKTsNCiAgICAgIHRoaXMubGltaXQgPSB2YWw7DQogICAgICB0aGlzLmdldExpc3QoKTsNCiAgICB9LA0KICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UodmFsKSB7DQogICAgICBjb25zb2xlLmxvZyhg5b2T5YmN6aG1OiAke3ZhbH1gKTsNCiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSB2YWw7DQogICAgICB0aGlzLmdldExpc3QoKTsNCiAgICB9LA0KICAgIC8vIOmHjee9ruaQnOe0ouagjw0KICAgIGRvUmVzZXQoKSB7DQogICAgICB0aGlzLnNlYXJjaC5rZXl3b3JkID0gIiI7DQogICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMTsNCiAgICAgIHRoaXMubGltaXQgPSAxMDsNCiAgICAgIHRoaXMuZ2V0TGlzdCgpOw0KICAgIH0sDQogICAgLy8g5pCc57Si5oyJ6ZKuDQogICAgZG9TZWFyY2goKSB7DQogICAgICBpZiAodGhpcy5zZWFyY2gua2V5d29yZC5sZW5ndGggPiAwKSB7DQogICAgICAgIC8vIOiKgua1gQ0KICAgICAgICBpZiAoIXRoaXMuc2VhcmNoLnRpbWVyKSB7DQogICAgICAgICAgdGhpcy5zZWFyY2gudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnNlYXJjaC50aW1lcik7DQogICAgICAgICAgICB0aGlzLnNlYXJjaC50aW1lciA9IG51bGw7DQogICAgICAgICAgfSwgMjAwMCk7DQogICAgICAgICAgdGhpcy5nZXRMaXN0KCk7DQogICAgICAgIH0NCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXmkJzntKLlhbPplK7lrZciLA0KICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwNCiAgICAgICAgfSk7DQogICAgICB9DQogICAgfSwNCiAgICAvKioNCiAgICAgKiDmlrDlop7mjInpkq7kuovku7bvvIzmlrDlop7op5LoibLkuovku7YNCiAgICAgKi8NCiAgICBhc3luYyBhZGRSb2xlSGFuZGxlcigpIHsNCiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlOw0KICAgIH0sDQogICAgLyoqDQogICAgICog5paw5aKe6KeS6Imy6KGo5Y2VIC0g5Y+W5raI5LqL5Lu2DQogICAgICovDQogICAgYWRkUm9sZUZvcm1DYW5jZWwoKSB7DQogICAgICAvLyDlhbPpl63ooajljZUNCiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZTsNCiAgICB9LA0KICAgIC8qKg0KICAgICAqIOaWsOWinuinkuiJsuihqOWNlSAtIOehruWumuS6i+S7tg0KICAgICAqLw0KICAgIGFzeW5jIGFkZFJvbGVGb3JtT2soKSB7DQogICAgICBjb25zdCB7IG5hbWUsIGRlc2MgfSA9IHRoaXMuZm9ybTsNCiAgICAgIGlmIChuYW1lLmxlbmd0aCA8IDEgJiYgZGVzYy5sZW5ndGggPCAxKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgIG1lc3NhZ2U6ICLlhoXlrrnkuI3og73kuLrnqboiLA0KICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwNCiAgICAgICAgfSk7DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCiAgICAgIC8vIOaYr+e8lui+kei/m+adpeeahA0KICAgICAgaWYgKHRoaXMuaXNFZGl0KSB7DQogICAgICAgIC8vIOafpeeci+aUueeahOWQjeWtl+aYr+WQpuaciemHjeWkjQ0KICAgICAgICBpZiAoDQogICAgICAgICAgdGhpcy5yb2xlTGlzdA0KICAgICAgICAgICAgLmZpbHRlcigoaXRlbSkgPT4gaXRlbS5pZCAhPT0gdGhpcy5lZGl0SWQpDQogICAgICAgICAgICAuc29tZSgoaXRlbSkgPT4gaXRlbS5uYW1lID09PSBuYW1lKQ0KICAgICAgICApIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgIG1lc3NhZ2U6ICLlt7LmnInnm7jlkIzop5LoibLlkI3np7AiLA0KICAgICAgICAgICAgdHlwZTogIndhcm5pbmciLA0KICAgICAgICAgIH0pOw0KICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBlZGl0Um9sZSh7IC4uLnRoaXMuZm9ybSwgaWQ6IHRoaXMuZWRpdElkIH0pOw0KICAgICAgICBpZiAocmVzLmNvZGUgPT09IDEpIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgIG1lc3NhZ2U6ICLkv67mlLnmiJDlip8iLA0KICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLA0KICAgICAgICAgIH0pOw0KICAgICAgICB9DQogICAgICB9IGVsc2Ugew0KICAgICAgICAvLyDpqozor4HmmK/lkKbmnInnm7jlkIzop5LoibLlkI0NCiAgICAgICAgaWYgKHRoaXMucm9sZUxpc3Quc29tZSgoaXRlbSkgPT4gaXRlbS5uYW1lID09PSBuYW1lKSkgew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgICAgbWVzc2FnZTogIuW3suacieebuOWQjOinkuiJsuWQjeensCIsDQogICAgICAgICAgICB0eXBlOiAid2FybmluZyIsDQogICAgICAgICAgfSk7DQogICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQogICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGFkZFJvbGUodGhpcy5mb3JtKTsNCiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAxKSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgICAgICBtZXNzYWdlOiAi5re75Yqg6KeS6Imy5oiQ5YqfIiwNCiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwNCiAgICAgICAgICB9KTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgLy8g5YWz6Zet6KGo5Y2VDQogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2U7DQogICAgICAvLyDmm7TmlrDpobXpnaINCiAgICAgIHRoaXMuZ2V0TGlzdCgpOw0KICAgIH0sDQogICAgLyoqDQogICAgICog57yW6L6R6KeS6Imy5LqL5Lu2DQogICAgICovDQogICAgZWRpdFJvbGVIYW5kbGVyKHJvbGUpIHsNCiAgICAgIGNvbnNvbGUubG9nKHJvbGUpOw0KICAgICAgdGhpcy5pc0VkaXQgPSB0cnVlOw0KICAgICAgdGhpcy5lZGl0SWQgPSByb2xlLmlkOw0KICAgICAgdGhpcy5mb3JtLm5hbWUgPSByb2xlLm5hbWU7DQogICAgICB0aGlzLmZvcm0uZGVzYyA9IHJvbGUuZGVzYzsNCiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlOw0KICAgIH0sDQogICAgLyoqDQogICAgICog5Yig6Zmk6KeS6Imy5LqL5Lu2DQogICAgICovDQogICAgZGVsZXRlUm9sZUhhbmRsZXIoaWQpIHsNCiAgICAgIGNvbnNvbGUubG9nKGlkKTsNCiAgICAgIHRoaXMuJGNvbmZpcm0oIuatpOaTjeS9nOWwhuawuOS5heWIoOmZpOivpeinkuiJsiwg5piv5ZCm57un57utPyIsICLmj5DnpLoiLCB7DQogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwNCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsDQogICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwNCiAgICAgIH0pDQogICAgICAgIC50aGVuKGFzeW5jICgpID0+IHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwNCiAgICAgICAgICAgIG1lc3NhZ2U6ICLliKDpmaTmiJDlip8hIiwNCiAgICAgICAgICB9KTsNCiAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBkZWxldGVSb2xlKGlkKTsNCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDEpIHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7DQogICAgICAgICAgICAvLyDmm7TmlrDpobXpnaINCiAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOw0KICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKCgpID0+IHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgIHR5cGU6ICJpbmZvIiwNCiAgICAgICAgICAgIG1lc3NhZ2U6ICLlt7Llj5bmtojliKDpmaQiLA0KICAgICAgICAgIH0pOw0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIC8qKg0KICAgICAqIOWIhumFjeadg+mZkOaMiemSrg0KICAgICAqLw0KICAgIGFzeW5jIGFzc2lnblBlcm1pc3Npb25zKHJvdykgew0KICAgICAgY29uc29sZS5sb2cocm93KTsNCiAgICAgIHRoaXMuZGlhbG9nUm9sZVBlcm1pc3Npb24gPSB0cnVlOw0KICAgICAgdGhpcy5hc3NpZ24uaWQgPSByb3cuaWQ7DQogICAgICBjb25zdCByZXMgPSBhd2FpdCBnZXRQZXJtaXNzaW9uTGlzdCh7DQogICAgICAgIGxpbWl0OiAxMDAsDQogICAgICAgIHBhZ2U6IDEsDQogICAgICAgIGtleXdvcmQ6ICIiLA0KICAgICAgfSk7DQogICAgICBpZiAocmVzLmNvZGUgPT09IDEpIHsNCiAgICAgICAgdGhpcy5hc3NpZ24ub3B0aW9ucyA9IHJlcy5kYXRhLmxpc3QNCiAgICAgICAgICA/Lm1hcD8uKChpdGVtLCBpLCBhcnIpID0+IHsNCiAgICAgICAgICAgIGlmIChpdGVtLnBhdGguc3BsaXQoIi8iKS5sZW5ndGggPT09IDIpIHsNCiAgICAgICAgICAgICAgY29uc29sZS5sb2coaXRlbS5wYXRoKTsNCiAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBpZDogaXRlbS5pZCwNCiAgICAgICAgICAgICAgICBsYWJlbDogaXRlbS5uYW1lLA0KICAgICAgICAgICAgICAgIHBhdGg6IGl0ZW0ucGF0aCwNCiAgICAgICAgICAgICAgICBjaGlsZHJlbjogYXJyDQogICAgICAgICAgICAgICAgICAubWFwKChpdCkgPT4NCiAgICAgICAgICAgICAgICAgICAgaXQucGF0aC5zcGxpdCgiLyIpLmxlbmd0aCA+IDIgJiYgaXQucGF0aC5pbmNsdWRlcyhpdGVtLnBhdGgpDQogICAgICAgICAgICAgICAgICAgICAgPyB7DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBpdC5pZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGl0Lm5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IGl0LnBhdGgsDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgOiBmYWxzZQ0KICAgICAgICAgICAgICAgICAgKQ0KICAgICAgICAgICAgICAgICAgLmZpbHRlcigoaXQpID0+IGl0KQ0KICAgICAgICAgICAgICAgICAgLnJldmVyc2UoKSwNCiAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgICAgIC5maWx0ZXIoKGl0KSA9PiBpdCkNCiAgICAgICAgICAucmV2ZXJzZSgpOw0KICAgICAgICBjb25zb2xlLmxvZygiLS0tLS0tLS0tLS0tLS0tIik7DQogICAgICAgIGNvbnNvbGUudGFibGUodGhpcy5hc3NpZ24ub3B0aW9ucyk7DQogICAgICB9DQogICAgICBjb25zb2xlLmxvZyhyZXMpOw0KICAgICAgdGhpcy5yZXNLZXlzID0gcmVzLmRhdGEubGlzdC5tYXAoKGl0ZW0pID0+IGl0ZW0uaWQpOw0KICAgICAgY29uc29sZS5sb2cocm93LnBlcm1pc3Npb25zKTsNCiAgICAgIGNvbnN0IGtleXMgPSByb3cucGVybWlzc2lvbnMNCiAgICAgICAgPy5tYXA/LigoaXRlbSkgPT4NCiAgICAgICAgICBpdGVtLnBhdGguc3BsaXQoIi8iKS5sZW5ndGggPT09IDIgJiYNCiAgICAgICAgICByb3cucGVybWlzc2lvbnMuc29tZShpdD0+aXQucGF0aC5pbmNsdWRlcyhpdGVtLnBhdGguY29uY2F0KCIvIikpKQ0KICAgICAgICAgICAgPyBmYWxzZQ0KICAgICAgICAgICAgOiBpdGVtLmlkDQogICAgICAgICkNCiAgICAgICAgLmZpbHRlcigoaXQpID0+IGl0KTsNCiAgICAgIGNvbnNvbGUubG9nKGtleXMpOw0KICAgICAgY29uc29sZS5sb2coKQ0KICAgICAgdGhpcy4kcmVmcy50cmVlLnNldENoZWNrZWRLZXlzKGtleXMgfHwgW10sIHRydWUpOw0KICAgIH0sDQogICAgLyoqDQogICAgICog5YWz6Zet5YiG6YWN5p2D6ZmQ5a+56K+d5qGGDQogICAgICovDQogICAgYXNzaWduUGVybWlzc2lvbnNDYW5jZWwoKSB7DQogICAgICB0aGlzLmRpYWxvZ1JvbGVQZXJtaXNzaW9uID0gZmFsc2U7DQogICAgfSwNCiAgICAvKioNCiAgICAgKiDliIbphY3mnYPpmZDlr7nor53moYbnoa7orqQNCiAgICAgKi8NCiAgICBhc3luYyBhc3NpZ25QZXJtaXNzaW9uc0NvbmZpcm0oKSB7DQogICAgICBjb25zdCBzZWxlY3QgPSB0aGlzLiRyZWZzLnRyZWUNCiAgICAgICAgLmdldENoZWNrZWROb2RlcyhmYWxzZSwgdHJ1ZSkNCiAgICAgICAgLm1hcCgoaXQpID0+IGl0LmlkKTsNCiAgICAgIGNvbnNvbGUubG9nKHNlbGVjdCk7DQogICAgICBjb25zdCBkZWxldGVSZXMgPSBhd2FpdCBkZWxldGVSb2xlUGVybWlzc2lvbih7DQogICAgICAgIHJvbGVfaWQ6IHRoaXMuYXNzaWduLmlkLA0KICAgICAgICBwZXJtaXNzaW9uX2lkczogdGhpcy5yZXNLZXlzLA0KICAgICAgfSk7DQogICAgICBjb25zb2xlLmxvZyhkZWxldGVSZXMpOw0KICAgICAgY29uc3QgYWRkUmVzID0gYXdhaXQgZWRpdFJvbGVQZXJtaXNzaW9uKHsNCiAgICAgICAgcm9sZV9pZDogdGhpcy5hc3NpZ24uaWQsDQogICAgICAgIHBlcm1pc3Npb25faWRzOiBzZWxlY3QsDQogICAgICB9KTsNCiAgICAgIGNvbnNvbGUubG9nKHsNCiAgICAgICAgcm9sZV9pZDogdGhpcy5hc3NpZ24uaWQsDQogICAgICAgIHBlcm1pc3Npb25faWRzOiBzZWxlY3QsDQogICAgICB9KTsNCiAgICAgIGNvbnNvbGUubG9nKGFkZFJlcyk7DQogICAgICB0aGlzLmRpYWxvZ1JvbGVQZXJtaXNzaW9uID0gZmFsc2U7DQogICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgbWVzc2FnZTogIuWIhumFjeaIkOWKnyIsDQogICAgICAgIHR5cGU6ICJzdWNjZXNzIiwNCiAgICAgIH0pOw0KICAgICAgdGhpcy5nZXRMaXN0KCk7DQogICAgfSwNCiAgICAvKioNCiAgICAgKiDmkJzntKLmoYYNCiAgICAgKi8NCiAgICBhc3luYyBzZWFyY2hQZXJtaXNzaW9uKGtleXdvcmQpIHsNCiAgICAgIGNvbnNvbGUubG9nKGtleXdvcmQpOw0KICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuYXNzaWduLnRpbWVyKTsNCiAgICAgIC8vIOi+k+WFpeWBnOatouinpuWPkSA1MDBtcw0KICAgICAgdGhpcy5hc3NpZ24udGltZXIgPSBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHsNCiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuYXNzaWduLnRpbWVyKTsNCiAgICAgICAgaWYgKGtleXdvcmQudHJpbSgpLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICB0aGlzLmFzc2lnbi5sb2FkaW5nID0gdHJ1ZTsNCiAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBnZXRQZXJtaXNzaW9uTGlzdCh7IGxpbWl0OiAxMCwgcGFnZTogMSwga2V5d29yZCB9KTsNCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOw0KICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMSkgew0KICAgICAgICAgICAgdGhpcy5hc3NpZ24ub3B0aW9ucyA9IHJlcy5kYXRhLmxpc3Q/Lm1hcCgoaXRlbSkgPT4gKHsNCiAgICAgICAgICAgICAgdmFsdWU6IGl0ZW0uaWQsDQogICAgICAgICAgICAgIGxhYmVsOiBpdGVtLm5hbWUsDQogICAgICAgICAgICB9KSk7DQogICAgICAgICAgfQ0KICAgICAgICAgIHRoaXMuYXNzaWduLmxvYWRpbmcgPSBmYWxzZTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLmFzc2lnbi5vcHRpb25zID0gW107DQogICAgICAgIH0NCiAgICAgIH0sIDUwMCk7DQogICAgICAwLjA7DQogICAgfSwNCiAgfSwNCn07DQo="},null]}