// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// CommentInfoDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type CommentInfoDao struct {
	gmvc.M                     // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB             // DB is the raw underlying database management object.
	Table   string             // Table is the table name of the DAO.
	Columns commentInfoColumns // Columns contains all the columns of Table that for convenient usage.
}

// CommentInfoColumns defines and stores column names for table comment_info.
type commentInfoColumns struct {
	Id        string //
	ParentId  string // 父级评论id
	UserId    string //
	ObjectId  string //
	Type      string // 评论类型：1商品 2文章
	Content   string // 评论内容
	CreatedAt string //
	UpdatedAt string //
	DeletedAt string //
}

func NewCommentInfoDao() *CommentInfoDao {
	return &CommentInfoDao{
		M:     g.DB("default").Model("comment_info").Safe(),
		DB:    g.DB("default"),
		Table: "comment_info",
		Columns: commentInfoColumns{
			Id:        "id",
			ParentId:  "parent_id",
			UserId:    "user_id",
			ObjectId:  "object_id",
			Type:      "type",
			Content:   "content",
			CreatedAt: "created_at",
			UpdatedAt: "updated_at",
			DeletedAt: "deleted_at",
		},
	}
}
